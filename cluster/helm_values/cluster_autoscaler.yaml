awsRegion: ${region}
cloudProvider: aws
priorityClassName: "infra"

autoscalingGroups:
%{ for asg in autoscaling_groups ~}
- name: ${asg}
  minSize: ${min_size}
  maxSize: ${max_size}
%{ endfor ~}

fullnameOverride: "cluster-autoscaler"

containerSecurityContext:
  allowPrivilegeEscalation: false
  runAsNonRoot: true
  readOnlyRootFilesystem: true
  capabilities:
    drop:
      - ALL

# we support ARM!
tolerations:
  - operator: Equal
    key: "beta.kubernetes.io/arch"
    value: "arm64"
    effect: "NoExecute"

expanderPriorities:
  10:
    - .*donkeys.*
  50:
    - .*minions.*

extraArgs:
  leader-elect: true
  expander: priority
  skip-nodes-with-system-pods: false
  skip-nodes-with-local-storage: false
  scale-down-delay-after-add: 5m
  scale-down-unneeded-time: 1m
  # leader-elect-resource-lock: endpoints
  # scale-down-enabled: true
  # balance-similar-node-groups: true
  # min-replica-count: 0
  # scale-down-utilization-threshold: 0.5
  # scale-down-non-empty-candidates-count: 30
  # max-node-provision-time: 15m0s
  # scan-interval: 10s
  # scale-down-delay-after-delete: 0s
  # scale-down-delay-after-failure: 3m
  # balancing-ignore-label_1: first-label-to-ignore
  # balancing-ignore-label_2: second-label-to-ignore

rbac:
  serviceAccount:
    name: "cluster-autoscaler"
    annotations:
      eks.amazonaws.com/role-arn: ${role_arn}

resources:
  limits:
    cpu: 100m
    memory: 300Mi
  requests:
    cpu: 100m
    memory: 300Mi
